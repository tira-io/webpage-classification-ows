name: Upload Docker Software to TIRA
on: 
  workflow_dispatch:
    inputs:
      dockerpath:
        description: The path to the directory where the Docker image should be build.
        required: true
        default: trivial-baseline
      command:
        description: The command that is to be executed to run the software. The variable $inputDataset points to the input directory that contains the inputs.jsonl file, the variable $outputDir points to the directory where the resulting predictions.jsonl should be stored.
        required: true
        default: /baseline.py -i $inputDataset/inputs.jsonl -o $outputDir/predictions.jsonl
      dockerfile:
        description: The Dockerfile to build. This Dockerfile is expected to be contained within the dockerpath.
        required: false
        default: Dockerfile

jobs:
  docker-build:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: registry.webis.de
          username: ${{ secrets.TIRA_DOCKER_REGISTRY_USER }}
          password: ${{ secrets.TIRA_DOCKER_REGISTRY_TOKEN }}
      -
        name: Set up Dependencies
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      -
        name: Install required python packages
        run: |
          python -m pip install --upgrade pip
          pip install tira==0.0.100
      -
        name: Set environment variables
        env:
          TIRA_TASK_ID: webpage-classification
          TIRA_VM_ID: ows
        run: |
          tira-run --export-submission-environment \
          	GITHUB_SHA=${{ github.sha }} \
          	TIRA_VM_ID=${{ env.TIRA_VM_ID }} \
          	TIRA_TASK_ID=${{ env.TIRA_TASK_ID }} \
          	TIRA_DOCKER_REGISTRY_TOKEN=${{ secrets.TIRA_DOCKER_REGISTRY_TOKEN }} \
          	TIRA_DOCKER_REGISTRY_USER=${{ secrets.TIRA_DOCKER_REGISTRY_USER }} \
          	TIRA_CLIENT_TOKEN=${{ secrets.TIRA_CLIENT_TOKEN }} \
          	TIRA_CLIENT_USER=${{ secrets.TIRA_CLIENT_USER }} \
          	TIRA_CODE_REPOSITORY_ID=${{ secrets.TIRA_CODE_REPOSITORY_ID }} \
          	TIRA_DOCKER_FILE=${{ inputs.dockerfile }} \
          	TIRA_DOCKER_PATH=${{ inputs.dockerpath }} \
          	'TIRA_COMMAND=${{ inputs.command }}' \
          	>> $GITHUB_ENV 
      - name: Build, test, and upload image
        run: |
          docker build -t ${{ env.IMAGE_TAG }} -f ${{ github.workspace }}/${{ env.TIRA_DOCKER_PATH }}/${{ env.TIRA_DOCKER_FILE }} ${{ github.workspace }}/${{ env.TIRA_DOCKER_PATH }}
          tira-run --input-dataset webpage-classification/tiny-sample-20231023-training --image ${{ env.IMAGE_TAG }} --push true

